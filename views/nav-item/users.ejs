
<!-- Main Content Wrapper -->
<div class="min-h-screen bg-gray-100 px-3 md:px-4 py-4">


    <!-- Top: Greeting + Actions -->
  <div class="flex items-center gap-2">
    <button class="btn lg:hidden p-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebarOffcanvas">
      <i class="bi bi-list text-xl"></i>
    </button>
  </div>

  <!-- Welcome Header -->
  <div class="flex items-center justify-between flex-wrap mb-4 w-full">
    <h6 id="sidebar-name" class="font-semibold mb-0 truncate flex-grow text-[1.15rem]">Users</h6>
  </div>

  <div class="d-flex align-items-center mb-4 gap-2 flex-wrap flex-sm-nowrap">
  <!-- Search -->
  <div class="relative min-w-[100px] w-auto">
  <span class="material-icons absolute left-3 top-1/2 -translate-y-1/2 text-gray-400 text-[20px]">search</span>
  <input type="text" id="leadSearch" 
         class="border rounded shadow-sm pl-10 pr-2 py-1 w-full focus:outline-none focus:ring-1 focus:ring-blue-500" 
         placeholder="Search">
</div>


  <!-- Sort -->
  <div class="d-flex align-items-center text-muted small gap-1 ms-auto">
    <span>Latest first</span>
    <span class="material-icons" style="font-size: 16px;">unfold_more</span>
  </div>
</div>

  <!-- Leads Container -->
  <!-- Leads Container -->
  <div class="flex flex-col gap-2">
    <% detailedTrips.forEach(({ trip, goingStops, returnStops, timing, user }) => { 
        if (!trip.priceEstimate) {
          trip.priceEstimate = Math.floor(Math.random() * (500 - 300 + 1)) + 300;
        }
    %>
      <div class="bg-white rounded shadow-sm  p-2 flex items-center justify-between cursor-pointer lead-card"
           data-id="<%= trip._id %>"
           data-submit-date="<%= String(new Date(trip.createdAt).getDate()).padStart(2,'0') %> <%= ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'][new Date(trip.createdAt).getMonth()] %> <%= new Date(trip.createdAt).getFullYear() %>"
           data-name="<%= user?.fullName || '' %>"
           data-email="<%= user?.email || '' %>"
           data-phone="<%= user?.phoneNumber || '' %>"
           data-pickup="<%= trip.pickupLocation %>"
           data-status="<%= trip.status || 'Pending' %>"
           data-destination="<%= trip.destinationLocation %>"
           data-date="<%= timing ? timing.departureDate + ' ' + timing.departureTime : '' %>"
           data-departure-date="<%= timing?.departureDate %>"
           data-departure-time="<%= timing?.departureTime %>"
           data-return-date="<%= timing?.returnDate %>"
           data-return-time="<%= timing?.returnTime %>"
           data-passengers="<%= trip.numberOfPeople %>"
           data-price-estimate="<%= trip.priceEstimate %>">

        

        <!-- Passenger Name -->
        <div class="flex flex-col sm:flex-row items-start sm:items-center flex-grow gap-3 sm:gap-2">
        <div class="font-semibold"><%= user?.fullName || 'N/A' %></div>
        <div class="text-gray-500 text-xs"><%= user?.email || 'N/A' %></div>
      </div>

      <!-- Chevron Icon Last -->
      <div class="flex items-center text-gray-500 ml-3">
        <span class="material-icons">chevron_right</span>
      </div>
    </div>
    <% }); %>
  </div>

</div>

<!-- Optional: Client-side JS for detail panel etc. -->
<script>
document.addEventListener('DOMContentLoaded', () => {

  // Lead card click functionality
  document.querySelectorAll('.lead-card').forEach(card => {
    card.addEventListener('click', () => {
      const data = {
        id: card.dataset.id,
        name: card.dataset.name,
        email: card.dataset.email,
        phone: card.dataset.phone,
        pickup: card.dataset.pickup,
        destination: card.dataset.destination,
        departureDate: card.dataset.departureDate,
        departureTime: card.dataset.departureTime,
        returnDate: card.dataset.returnDate,
        returnTime: card.dataset.returnTime,
        passengers: card.dataset.passengers,
        priceEstimate: card.dataset.priceEstimate,
        submitDate: card.dataset.submitDate,
        fromStops: JSON.parse(card.dataset.fromStops || "[]"),
        toStops: JSON.parse(card.dataset.toStops || "[]")
      };
      updateLeadDetails(data);
    });
  });

  // Search functionality
  const searchInput = document.getElementById('leadSearch');
  searchInput.addEventListener('input', () => {
    const query = searchInput.value.toLowerCase();
    document.querySelectorAll('.lead-card').forEach(card => {
      const name = card.dataset.name?.toLowerCase() || '';
      const email = card.dataset.email?.toLowerCase() || '';
      const pickup = card.dataset.pickup?.toLowerCase() || '';
      const destination = card.dataset.destination?.toLowerCase() || '';
      
      if (name.includes(query) || email.includes(query) || pickup.includes(query) || destination.includes(query)) {
        card.style.display = 'flex';
      } else {
        card.style.display = 'none';
      }
    });
  });

});
</script>





